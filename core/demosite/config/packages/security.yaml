security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            stateless: true
            entry_point: jwt
            json_login:
                check_path: /api/v1/token # or, if you have defined a route for your login path, the route name you used
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                username_path: email
            jwt: ~
            refresh_jwt:
                check_path: /api/v1/token/refresh
                provider: app_user_provider

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/v1/users$, methods: [ POST ], roles: PUBLIC_ACCESS }
        - { path: ^/api/v1$, roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/token/refresh$, roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/token$, roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/login/([ a-zA-Z0-9- ]+)$, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }